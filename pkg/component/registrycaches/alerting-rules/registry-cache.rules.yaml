groups:
- name: registry-cache.rules
  rules:
  - alert: RegistryCachePersistentVolumeUsageCritical
    expr: |
      100 * (
        kubelet_volume_stats_available_bytes{persistentvolumeclaim=~"^cache-volume-registry-.+$"}
          /
        kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"^cache-volume-registry-.+$"}
      ) < 5
    for: 1h
    labels:
      service: registry-cache-extension
      severity: warning
      type: shoot
      visibility: owner
    annotations:
      summary: Registry cache PersistentVolume almost full.
      description: The registry-cache PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} is only {{ printf "%0.2f" $value }}% free. When there is no available disk space, no new images will be cached. However, image pull operations are not affected.
  - alert: RegistryCachePersistentVolumeFullInFourDays
    expr: |
      100 * (
        kubelet_volume_stats_available_bytes{persistentvolumeclaim=~"^cache-volume-registry-.+$"}
          /
        kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"^cache-volume-registry-.+$"}
      ) < 15
      and
      predict_linear(kubelet_volume_stats_available_bytes{persistentvolumeclaim=~"^cache-volume-registry-.+$"}[30m], 4 * 24 * 3600) <= 0
    for: 1h
    labels:
      service: registry-cache-extension
      severity: warning
      type: shoot
      visibility: owner
    annotations:
      summary: Registry cache PersistentVolume will be full in four days.
      description: Based on recent sampling, the registry cache PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ printf "%0.2f" $value }}% is available.

  # We rely on the implicit contract that recording rules in format "shoot:(.+):(.+)" will be
  # automatically federated to the aggregate prometheus and then to the garden-prometheus.
  # Ref https://github.com/gardener/gardener/blob/v1.90.0/pkg/component/observability/monitoring/prometheus/aggregate/servicemonitors.go#L45
  - record: shoot:registry_proxy_pushed_bytes_total:sum
    expr: sum by (upstream_host) (rate(registry_proxy_pushed_bytes_total[5m]))
  - record: shoot:registry_proxy_pulled_bytes_total:sum
    expr: sum by (upstream_host) (rate(registry_proxy_pulled_bytes_total[5m]))
